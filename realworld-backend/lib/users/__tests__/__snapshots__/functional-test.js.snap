// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`users GET /api/user when the user is not authenticated should return an unauthorized error 1`] = `
Object {
  "body": Object {
    "errors": Object {
      "error": Object {
        "data": null,
        "isBoom": true,
        "isServer": false,
        "message": "Unauthorized",
        "output": Object {
          "headers": Object {},
          "payload": Object {
            "error": "Unauthorized",
            "message": "Unauthorized",
            "statusCode": 401,
          },
          "statusCode": 401,
        },
      },
      "message": "Unauthorized",
    },
  },
  "status": 401,
}
`;

exports[`users POST /api/users when the request body is invalid should return an unprocessable entity error 1`] = `
Object {
  "body": Object {
    "errors": Object {
      "email": Array [
        "can't be blank",
      ],
      "password": Array [
        "can't be blank",
      ],
      "username": Array [
        "can't be blank",
      ],
    },
  },
  "status": 422,
}
`;

exports[`users POST /api/users/login when the request body is invalid should return an unprocessable entity error 1`] = `
Object {
  "body": Object {
    "errors": Object {
      "email": Array [
        "is invalid",
      ],
      "password": Array [
        "is invalid",
      ],
    },
  },
  "status": 422,
}
`;

exports[`users PUT /api/user when the user is not authenticated should return an unauthorized error 1`] = `
Object {
  "body": Object {
    "errors": Object {
      "error": Object {
        "data": null,
        "isBoom": true,
        "isServer": false,
        "message": "Unauthorized",
        "output": Object {
          "headers": Object {},
          "payload": Object {
            "error": "Unauthorized",
            "message": "Unauthorized",
            "statusCode": 401,
          },
          "statusCode": 401,
        },
      },
      "message": "Unauthorized",
    },
  },
  "status": 401,
}
`;
